package com.space.service;

import com.space.model.Ship;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Calendar;
import java.util.Date;

public class Utils {
    /**
     –ú—ã –Ω–µ –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–æ—Ä–∞–±–ª—å, –µ—Å–ª–∏:
     - —É–∫–∞–∑–∞–Ω—ã –Ω–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ Data Params (–∫—Ä–æ–º–µ isUsed);
     - –¥–ª–∏–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ‚Äúname‚Äù –∏–ª–∏ ‚Äúplanet‚Äù –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ä–∞–∑–º–µ—Ä —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—è –≤ –ë–î (50 —Å–∏–º–≤–æ–ª–æ–≤);
     - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ‚Äúname‚Äù –∏–ª–∏ ‚Äúplanet‚Äù –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞;
     - —Å–∫–æ—Ä–æ—Å—Ç—å –∏–ª–∏ —Ä–∞–∑–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–Ω–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–æ–≤; - ‚ÄúprodDate‚Äù:[Long] < 0;
     - –≥–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–Ω–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–æ–≤.
     */
    public static Boolean isBadRequest(Ship ship) {
        if (ship == null || ship.getProdDate() == null || ship.getSpeed() == null || ship.getCrewSize() == null)
            return true;
        Calendar calendar = Calendar.getInstance();
        calendar.set(2800, Calendar.JANUARY, 1, 0, 0, 0);
        if (calendar.getTime().getTime()>=ship.getProdDate().getTime())
            return true;
        calendar.set(3019, Calendar.DECEMBER, 31, 23, 59, 59);
        if (calendar.getTime().getTime()<=ship.getProdDate().getTime())
            return true;
        double speed = round(ship.getSpeed(),2);
        if (speed<0.01 || speed>0.99)
            return true;
        Integer crewSize = ship.getCrewSize();
        if (crewSize<1||crewSize>9999)
            return true;
        if (isBadString(ship.getName()) || isBadString(ship.getPlanet()))
            return true;
        return false;
    }

    private static boolean isBadString(String field) {
        return field == null || field.length()<1 || field.length()>50;
    }

    public static double round(double value, int places) {
        if (places < 0) throw new IllegalArgumentException();

        BigDecimal bd = new BigDecimal(Double.toString(value));
        bd = bd.setScale(places, RoundingMode.HALF_UP);
        return bd.doubleValue();
    }
/**
 * –ü–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–æ—Ä–∞–±–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∏–ª–∏ –ø—Ä–∏ –∞–ø–¥–µ–π—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ),
 * –¥–æ–ª–∂–µ–Ω –≤—ã—Å—á–∏—Ç—ã–≤–∞—Ç—å—Å—è —Ä–µ–π—Ç–∏–Ω–≥ –∫–æ—Ä–∞–±–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –ë–î.
 * –†–µ–π—Ç–∏–Ω–≥ –∫–æ—Ä–∞–±–ª—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ: ùëÖ = 80¬∑ùë£¬∑ùëò ùë¶0‚àíùë¶1+1  ,
 * –≥–¥–µ: v ‚Äî —Å–∫–æ—Ä–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è; k ‚Äî –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–≤–µ–Ω 1 –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∞–±–ª—è –∏ 0,5 –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ;
 * y0 ‚Äî —Ç–µ–∫—É—â–∏–π –≥–æ–¥ (–Ω–µ –∑–∞–±—É–¥—å, —á—Ç–æ ¬´—Å–µ–π—á–∞—Å¬ª 3019 –≥–æ–¥);
 * y1 ‚Äî –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∫–æ—Ä–∞–±–ª—è.
 *
 */
    public static Double calculateRating (Double speed, Date ProdDate, Boolean isUsed) {
        double k;
        if (isUsed)
            k = 0.5;
        else
            k = 1;
        Calendar calendar = Calendar.getInstance();
        calendar.set(3019,Calendar.JANUARY, 1, 0, 0, 0);
        return round(80*k*speed/(calendar.getTime().getYear() - ProdDate.getYear() + 1),2);
    }
}
